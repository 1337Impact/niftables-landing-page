"use client";
import DownCaret from "@/components/icons/DownCaret";
import UpCaret from "@/components/icons/UpCaret";
import Heading4 from "@/components/typography/Heading4";
import { useOurMission } from "./hooks";
import BodyText from "@/components/typography/BodyText";
import GrowthIcon from "@/components/icons/GrowthIcon";
import DecentralizedIcon from "@/components/icons/DecentralizedIcon";
import LaunchIcon from "@/components/icons/LaunchIcon";
import LimitlessIcon from "@/components/icons/LimitlessIcon";


const ourMissionAccordionData = [
    {
      title: "Profitability and Growth",
      content: `At Creon, we handpick cutting-edge AI projects and offer our community and token holders early access and investment opportunities. Our community actively contributes to the growth and profitability of these projects, creating a dynamic ecosystem of innovation and shared success.`,
      Icon: GrowthIcon,
    },
    {
        title: "Transparent & Fair Decentralized Earnings",
      content: `The key element of our proposal is the continuous access to distributed and decentralized earnings generated by AI tools that we provide through their creation or investment in them. This decentralized structure ensures greater transparency and fairness to all participants in the Creon ecosystem.`,
      Icon: DecentralizedIcon,
    },
    {
      title: "Launching the future",
      content: `What's more, Creon is pioneering in offering the first known opportunity to acquire allocations in tokenised AI projects through our Creon Launchpad platform. This gives investors a unique chance for early engagement in the most promising AI projects, opening the door to potentially high returns.`,
      Icon: LaunchIcon,
    },
    {
        title: "Limitless Possibilities of AI & Crypto",
      content: `The possibilities offered by the integration of AI and cryptocurrencies are limitless, and we're just beginning to explore them. As pioneers, our journey into uncharted territory is fraught with challenges, but the rewards promise to be equally extraordinary. Creon isnâ€™t just about profiting from technological innovation; it's about being part of the process that brings these innovations to life.`,
      Icon: LimitlessIcon,
    },
];

const Accordion = () => {
    const transitionClasses =
      "transition-all ease-in-out duration-300 transform origin-top";
      
    const { activeAccordion, handleToggleAccordion } = useOurMission();
  
    return (
      <ul
      className={`${transitionClasses} w-full h-fit flex flex-col justify-center`}
      >
        {ourMissionAccordionData.map((data, index) => (
            <li
            key={index}
            className="px-2 py-2 xl:py-4 border-tertiary border-b-[1px]"
            onClick={() => handleToggleAccordion(index)}
            >
            <AccordionButton
              title={data.title}
              open={index === activeAccordion}
              Icon={data.Icon}
              />
            <div
              className={`${transitionClasses} overflow-hidden  ${
                  index === activeAccordion ? "h-[280px] xl:h-[200px]" : "h-[1px]"
                }`}
                >
              <BodyText
                className={`${transitionClasses} pl-[100px] xl:pl-[130px] ${
                    index === activeAccordion ? "opacity-100" : "opacity-50"
                }`}
                >
                {data.content}
              </BodyText>
            </div>
          </li>
        ))}
      </ul>
    );
};

export default Accordion;

type AccordionButtonProps = {
    title: string;
    open: boolean;
    Icon: React.FC<{ active?: boolean }>;
  };
  
  const AccordionButton = ({ open, title, Icon }: AccordionButtonProps) => {
    const transitionClasses = "transition-all ease-in duration-200";
  
    return (
      <div className="w-full flex items-center gap-6 justify-between cursor-pointer py-2 xl:py-4 group">
        <div className="w-full flex items-center gap-6">
          <div className="w-[73px] h-[83px] min-w-[73px]  xl:w-[100px] xl:h-[114px] xl:min-w-[100px]">
            <Icon active={open} />
          </div>
          <div className="w-full flex justify-between">
            <Heading4
              className={`${transitionClasses} max-w-[360px] ${
                !open ? "group-hover:text-primary" : ""
              }`}
            >
              {title}
            </Heading4>
            <div className="p-1 xl:p-2">
              {open ? (
                <UpCaret className={!open ? "group-hover:stroke-primary" : ""} />
              ) : (
                <DownCaret
                  className={!open ? "group-hover:stroke-primary" : ""}
                />
              )}
            </div>
          </div>
        </div>
      </div>
    );
  };